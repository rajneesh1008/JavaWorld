package com.verizon.DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.PreparedStatementCreator;
import org.springframework.jdbc.core.PreparedStatementSetter;
import org.springframework.jdbc.core.ResultSetExtractor;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

import com.verizon.DTO.Employee;

@Repository
public class EmployeeDAO {

	@Autowired
	private JdbcTemplate jdbcTemplate;

	public int save(Employee employee) {
		String sql = "insert into EMP_TBL values(?,?,?)";
		return jdbcTemplate.update(sql, employee.getEno(), employee.getName(), employee.getSalary());

	}

	public Employee findByEno(Integer eno) {
		String sql = "select * from EMP_TBL where eno=?";
		return jdbcTemplate.query(sql, new PreparedStatementSetter() {

			@Override
			public void setValues(PreparedStatement ps) throws SQLException {
				ps.setInt(1, eno);

			}
		}, new ResultSetExtractor<Employee>() {

			@Override
			public Employee extractData(ResultSet rs) throws SQLException, DataAccessException {
				Employee employee = null;
				if (rs.next()) {
					employee = new Employee();
					employee.setEno(rs.getInt("eno"));
					employee.setName(rs.getString("name"));
					employee.setSalary(rs.getDouble("salary"));
				}
				return employee;

			}
		});

	}
	public List<Employee>findAllEmployee() {
		String sql="select * from EMP_TBL";
		return jdbcTemplate.query(sql,
		   new RowMapper<Employee>() {

			@Override
			public Employee mapRow(ResultSet rs, int rowNum) throws SQLException {
				Employee employee = new Employee();
				employee.setEno(rs.getInt("eno"));
				employee.setName(rs.getString("name"));
				employee.setSalary(rs.getDouble("salary"));
				return employee;
			}
		});
		
	}
	public List<Employee>findByName(String name) {
		
		jdbcTemplate.query(
		 new PreparedStatementCreator() {
			
			@Override
			public PreparedStatement createPreparedStatement(Connection con) throws SQLException {
				String sql="select * from EMP_TBL where name=?";
				PreparedStatement pstmt = con.prepareStatement(sql);
				pstmt.setString(1,name);
				
				return pstmt;
			}
		}, 
		 new RowMapper<Employee>() {

			@Override
			public Employee mapRow(ResultSet rs, int rowNum) throws SQLException {
				Employee employee = new Employee();
				employee.setEno(rs.getInt("eno"));
				employee.setName(rs.getString("name"));
				employee.setSalary(rs.getDouble("salary"));
				return null;
			}
		});
		return null;
		
	}
}
